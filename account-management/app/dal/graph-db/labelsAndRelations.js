// This should be in a private npm repo

const LABELS = {
  address: 'Address',
  applicationAdmin: 'ApplicationAdmin',
  businessUnit: 'BusinessUnit',
  client: 'Client',
  configuration: 'Configuration',
  connection: 'Connection',
  connectionAuth: 'ConnectionAuth',
  connectionUrl: 'ConnectionUrl',
  defaultBusinessUnit: 'DefaultBusinessUnit',
  defaultRole: 'DefaultRole',
  epic: 'Epic',
  explorativeQuestion: 'ExplorativeQuestion',
  feature: 'Feature',
  feedbackQuestion: 'FeedbackQuestion',
  feedbackQuestionSet: 'FeedbackQuestionSet',
  historyLog: 'HistoryLog',
  historyLogs: 'HistoryLogs',
  issue: 'Issue',
  issueGroup: 'IssueGroup',
  jira: 'JIRA',
  licenseCount: 'LicenseCount',
  markedForAutomationEntities: 'MarkedForAutomationEntities',
  module: 'Module',
  object: 'Object',
  objectClass: 'ObjectClass',
  objectClasses: 'ObjectClasses',
  objectCollection: 'ObjectCollection',
  objectLocator: 'ObjectLocator',
  objectLocatorType: 'ObjectLocatorType',
  objectLocatorTypes: 'ObjectLocatorTypes',
  objectMetadata: 'ObjectMetadata',
  objectType: 'ObjectType',
  objectTypes: 'ObjectTypes',
  organization: 'Organization',
  orphanIssueGroup: 'OrphanIssueGroup',
  ownership: 'Ownership',
  paymentStrategy: 'PaymentStrategy',
  pricingPlan: 'PricingPlan',
  pricingPlanStrategy: 'PricingPlanStrategy',
  priorities: 'Priorities',
  priority: 'Priority',
  privilege: 'Privilege',
  product: 'Product',
  productConfiguration: 'ProductConfiguration',
  project: 'Project',
  projectRole: 'ProjectRole',
  qas: 'QAS',
  rmt: 'RMT',
  rmtIssueType: 'RMTIssueType',
  rmtProject: 'RMTProject',
  ratableQuestion: 'RatableQuestion',
  renewPasswordToken: 'RenewPasswordToken',
  review: 'Review',
  reviewCollection: 'ReviewCollection',
  role: 'Role',
  sales: 'Sales',
  severities: 'Severities',
  severity: 'Severity',
  step: 'Step',
  story: 'Story',
  task: 'Task',
  taskCollection: 'TaskCollection',
  taskReference: 'TaskReference',
  testCase: 'TestCase',
  testCaseCollection: 'TestCaseCollection',
  token: 'Token',
  user: 'User',
  userInvitationToken: 'UserInvitationToken',
};

const RELATIONSHIPS = {
  hasFeedbackQuestionSet: 'HAS_FEEDBACK_QUESTION_SET',
  hasProductConfiguration: 'HAS_PRODUCT_CONFIGURATION',
  hasPricingPlan: 'HAS_PRICING_PLAN',
  hasApplicationAdmin: 'HAS_APPLICATION_ADMIN',
  hasSales: 'HAS_SALES',
  isUsingPricingPlan: 'IS_USING_PRICING_PLAN',
  hasPaymentStrategy: 'HAS_PAYMENT_STRATEGY',
  hasFeedbackQuestion: 'HAS_FEEDBACK_QUESTION',
  hasAccessToken: 'HAS_ACCESS_TOKEN',
  hasRMTConfiguration: 'HAS_RMT_CONFIGURATION',
  isOfType: 'IS_OF_TYPE',
  hasPrivilege: 'HAS_PRIVILEGE',
  createdBy: 'CREATED_BY',
  isMemberOf: 'IS_MEMBER_OF',
  hasInvitationToken: 'HAS_INVITATION_TOKEN',
  updatedBy: 'UPDATED_BY',
  hasGrantedToken: 'HAS_GRANTED_TOKEN',
  hasAddress: 'HAS_ADDRESS',
  hasDefaultBusinessUnit: 'HAS_DEFAULT_BUSINESS_UNIT',
  currentPricingPlanStrategy: 'CURRENT_PRICING_PLAN_STRATEGY',
  currentLicenseCount: 'CURRENT_LICENSE_COUNT',
  hasTestCaseCollection: 'HAS_TEST_CASE_COLLECTION',
  hasTestCase: 'HAS_TEST_CASE',
  hasTaskCollection: 'HAS_TASK_COLLECTION',
  lockedBy: 'LOCKED_BY',
  hasRenewPasswordToken: 'HAS_RENEW_PASSWORD_TOKEN',
  hasObjectType: 'HAS_OBJECT_TYPE',
  hasDeviceType: 'HAS_DEVICE_TYPE',
  hasObjectClass: 'HAS_OBJECT_CLASS',
  hasObjectLocatorType: 'HAS_OBJECT_LOCATOR_TYPE',
  usesClass: 'USES_CLASS',
  hasObjectClasses: 'HAS_OBJECT_CLASSES',
  markedForAutomation: 'MARKED_FOR_AUTOMATION',
  isOwnedBy: 'IS_OWNED_BY',
  hasHistoryLogs: 'HAS_HISTORY_LOGS',
  hasSeverity: 'HAS_SEVERITY',
  hasStep: 'HAS_STEP',
  hasPriority: 'HAS_PRIORITY',
  hasHistoryLog: 'HAS_HISTORY_LOG',
  hasTask: 'HAS_TASK',
  hasProject: 'HAS_PROJECT',
  hasOrphanIssueGroup: 'HAS_ORPHAN_ISSUE_GROUP',
  hasIssueGroup: 'HAS_ISSUE_GROUP',
  hasConfiguration: 'HAS_CONFIGURATION',
  hasOwnershipType: 'HAS_OWNERSHIP_TYPE',
  hasObjectMetadata: 'HAS_OBJECT_METADATA',
  hasObjectCollection: 'HAS_OBJECT_COLLECTION',
  hasMarkedForAutomationEntities: 'HAS_MARKED_FOR_AUTOMATION_ENTITIES',
  hasObject: 'HAS_OBJECT',
  hasObjectTypes: 'HAS_OBJECT_TYPES',
  hasObjectLocatorTypes: 'HAS_OBJECT_LOCATOR_TYPES',
  hasSeverities: 'HAS_SEVERITIES',
  hasPriorities: 'HAS_PRIORITIES',
  hasIssueType: 'HAS_ISSUE_TYPE',
  hasRmtProject: 'HAS_RMT_PROJECT',
  hasChildIssueType: 'HAS_CHILD_ISSUE_TYPE',
  hasIssue: 'HAS_ISSUE',
  hasConnection: 'HAS_CONNECTION',
  hasConnectionAuth: 'HAS_CONNECTION_AUTH',
  hasConnectionUrl: 'HAS_CONNECTION_URL',
  hasReviewer: 'HAS_REVIEWER',
  usesObject: 'USES_OBJECT',
  hasObjectLocator: 'HAS_OBJECT_LOCATOR',
  hasQasConfiguration: 'HAS_QAS_CONFIGURATION',
  hasReviewCollection: 'HAS_REVIEW_COLLECTION',
  hasReview: 'HAS_REVIEW',
};

module.exports = { LABELS, RELATIONSHIPS };
